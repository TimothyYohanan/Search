Here's the breakdown of query speed for the paragraph 'silver ridge'.
I'm measuring the time it takes to run the query when the final 'e' of the paragraph is typed.

Yesterday's commit had the following characteristics:
Time taken to search the database: 1755.99 microseconds
Time taken to process results: 138.67

This commit has the following characteristics:
Time taken to search the database: 711.32 microseconds
Time taken to process results: 122.68

Combining the two queries into one would probably speed things up a bit, but I'm going to try doing it multithreaded first.
The longer of the two queries tends to take 446.66 microseconds, so with the overhead of multithreading, lets estimate the entire query will take 466.66 microseconds.
Combined with the processing time afterwards, we're probably looking at another 100 microsecond improvement.
It isn't quite 1/10th of a frame, but it's good enough.

the sorting method used to rank search results is a placeholder for application-specific methods.
the placeholder functions are:
    Search::calculateParagraphScores()
	Search::rankParagraphs()
	Search::rankParagraphIds()

